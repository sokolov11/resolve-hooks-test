kind: pipeline
type: docker
name: resolve-react-hooks
steps:
  - name: install
    image: reimagined/resolve-docker
    pull: always
    commands:
      - cd resolve-react
      - yarn

  - name: test
    image: reimagined/resolve-docker
    pull: always
    depends_on:
      - install
    commands:
      - cd resolve-react
      - yarn test

  - name: compile
    image: reimagined/resolve-docker
    depends_on:
      - test
    commands:
      - cd resolve-react
      - yarn build
      - rm -rf ./src

  - name: publish
    image: reimagined/resolve-docker
    pull: always
    depends_on:
      - compile
    environment:
      NPM_REGISTRY:
        from_secret: npm_registry
      NPM_TOKEN:
        from_secret: npm_token
    commands:
      - cd resolve-react
      - VERSION=$(/scripts/prepare_downstream)
      - /scripts/npm_patch_rc
      - /scripts/npm_publish $VERSION latest

trigger:
  branch:
    - master
  event:
    - push

---

kind: pipeline
type: docker
name: resolve-api
steps:
  - name: install
    image: reimagined/resolve-docker
    pull: always
    commands:
      - cd resolve-api
      - yarn

  - name: test
    image: reimagined/resolve-docker
    pull: always
    depends_on:
      - install
    commands:
      - cd resolve-api
      - yarn test

  - name: compile
    image: reimagined/resolve-docker
    depends_on:
      - test
    commands:
      - cd resolve-api
      - yarn build
      - rm -rf ./src

  - name: publish
    image: reimagined/resolve-docker
    pull: always
    depends_on:
      - compile
    environment:
      NPM_REGISTRY:
        from_secret: npm_registry
      NPM_TOKEN:
        from_secret: npm_token
    commands:
      - cd resolve-api
      - VERSION=$(/scripts/prepare_downstream)
      - /scripts/npm_patch_rc
      - /scripts/npm_publish $VERSION latest

trigger:
  branch:
    - master
  event:
    - push
