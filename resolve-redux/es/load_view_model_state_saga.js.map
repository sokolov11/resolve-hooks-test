{"version":3,"sources":["../src/load_view_model_state_saga.js"],"names":["put","loadViewModelStateSuccess","loadViewModelStateFailure","loadViewModelStateSaga","api","viewModels","viewModelName","aggregateIds","aggregateArgs","loadViewModelState","serializedState","result","timestamp","find","name","deserializeState","state"],"mappings":";AAAA,SAASA,GAAT,QAAoB,oBAApB;AAEA,SAASC,yBAAT,EAAoCC,yBAApC,QAAqE,WAArE;;AAEA,IAAMC,sBAAsB;AAAA;AAAA,yBAAG,SAAzBA,sBAAyB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC3BC,UAAAA,GAD2B,QAC3BA,GAD2B,EACtBC,UADsB,QACtBA,UADsB;AAE3BC,UAAAA,aAF2B,SAE3BA,aAF2B,EAEZC,YAFY,SAEZA,YAFY,EAEEC,aAFF,SAEEA,aAFF;AAAA;AAAA;AAKoB,iBAAMJ,GAAG,CAACK,kBAAJ,CACnD;AACEH,YAAAA,aAAa,EAAbA,aADF;AAEEC,YAAAA,YAAY,EAAZA,YAFF;AAGEC,YAAAA,aAAa,EAAbA;AAHF,WADmD,CAAN;;AALpB;AAAA;AAKXE,UAAAA,eALW,SAKnBC,MALmB;AAKMC,UAAAA,SALN,SAKMA,SALN;AAAA,6BAaEP,UAAU,CAACQ,IAAX,CAC3B;AAAA,gBAAGC,IAAH,SAAGA,IAAH;AAAA,mBAAcA,IAAI,KAAKR,aAAvB;AAAA,WAD2B,CAbF,EAanBS,gBAbmB,oBAanBA,gBAbmB;AAiBrBC,UAAAA,KAjBqB,GAiBbD,gBAAgB,CAACL,eAAD,CAjBH;AAAA;AAmB3B,iBAAMV,GAAG,CACPC,yBAAyB,CACvBK,aADuB,EAEvBC,YAFuB,EAGvBC,aAHuB,EAIvBQ,KAJuB,EAKvBJ,SALuB,CADlB,CAAT;;AAnB2B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AA6B3B,iBAAMZ,GAAG,CACPE,yBAAyB,CACvBI,aADuB,EAEvBC,YAFuB,EAGvBC,aAHuB,cADlB,CAAT;;AA7B2B;AAAA;AAAA;AAAA;AAAA;AAAA,KAAzBL,sBAAyB;AAAA,CAAH,CAA5B;;AAwCA,eAAeA,sBAAf","sourcesContent":["import { put } from 'redux-saga/effects'\n\nimport { loadViewModelStateSuccess, loadViewModelStateFailure } from './actions'\n\nconst loadViewModelStateSaga = function*(\n  { api, viewModels },\n  { viewModelName, aggregateIds, aggregateArgs }\n) {\n  try {\n    const { result: serializedState, timestamp } = yield api.loadViewModelState(\n      {\n        viewModelName,\n        aggregateIds,\n        aggregateArgs\n      }\n    )\n\n    const { deserializeState } = viewModels.find(\n      ({ name }) => name === viewModelName\n    )\n\n    const state = deserializeState(serializedState)\n\n    yield put(\n      loadViewModelStateSuccess(\n        viewModelName,\n        aggregateIds,\n        aggregateArgs,\n        state,\n        timestamp\n      )\n    )\n  } catch (error) {\n    yield put(\n      loadViewModelStateFailure(\n        viewModelName,\n        aggregateIds,\n        aggregateArgs,\n        error\n      )\n    )\n  }\n}\n\nexport default loadViewModelStateSaga\n"],"file":"load_view_model_state_saga.js"}