{"version":3,"sources":["../src/create_read_models_reducer.js"],"names":["getHash","LOAD_READMODEL_STATE_REQUEST","LOAD_READMODEL_STATE_SUCCESS","LOAD_READMODEL_STATE_FAILURE","DROP_READMODEL_STATE","connectorMetaMap","dropKey","state","key","nextState","createReadModelsReducer","handlers","action","readModelName","resolverName","resolverArgs","isLoading","isFailure","readModelState","result","error","_","eventHandler","type"],"mappings":"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","sourcesContent":["import getHash from './get_hash'\n\nimport {\n  LOAD_READMODEL_STATE_REQUEST,\n  LOAD_READMODEL_STATE_SUCCESS,\n  LOAD_READMODEL_STATE_FAILURE,\n  DROP_READMODEL_STATE\n} from './action_types'\n\nimport { connectorMetaMap } from './constants'\n\nexport const dropKey = (state, key) => {\n  const nextState = { ...state }\n  delete nextState[key]\n\n  return nextState\n}\n\nexport default function createReadModelsReducer() {\n  const handlers = {}\n\n  handlers[LOAD_READMODEL_STATE_REQUEST] = (state, action) => {\n    const readModelName = action.readModelName\n    const resolverName = getHash(action.resolverName)\n    const resolverArgs = getHash(action.resolverArgs)\n\n    return {\n      ...state,\n      [connectorMetaMap]: {\n        ...state[connectorMetaMap],\n        [`${readModelName}${resolverName}${resolverArgs}`]: {\n          isLoading: true,\n          isFailure: false\n        }\n      }\n    }\n  }\n\n  handlers[LOAD_READMODEL_STATE_SUCCESS] = (state, action) => {\n    const readModelName = action.readModelName\n    const resolverName = getHash(action.resolverName)\n    const resolverArgs = getHash(action.resolverArgs)\n    const readModelState = action.result\n\n    const key = `${readModelName}${resolverName}${resolverArgs}`\n\n    return {\n      ...state,\n      [readModelName]: {\n        ...(state[readModelName] || {}),\n        [resolverName]: {\n          ...((state[readModelName] || {})[resolverName] || {}),\n          [resolverArgs]: readModelState\n        }\n      },\n      [connectorMetaMap]: {\n        ...state[connectorMetaMap],\n        [key]: {\n          isLoading: false,\n          isFailure: false\n        }\n      }\n    }\n  }\n\n  handlers[LOAD_READMODEL_STATE_FAILURE] = (state, action) => {\n    const readModelName = action.readModelName\n    const resolverName = getHash(action.resolverName)\n    const resolverArgs = getHash(action.resolverArgs)\n    const error = action.error\n\n    const key = `${readModelName}${resolverName}${resolverArgs}`\n\n    return {\n      ...state,\n      [connectorMetaMap]: {\n        ...state[connectorMetaMap],\n        [key]: {\n          isLoading: false,\n          isFailure: true,\n          error\n        }\n      }\n    }\n  }\n\n  handlers[DROP_READMODEL_STATE] = (state, action) => {\n    const readModelName = action.readModelName\n    const resolverName = getHash(action.resolverName)\n    const resolverArgs = getHash(action.resolverArgs)\n\n    const key = `${readModelName}${resolverName}${resolverArgs}`\n\n    return {\n      ...state,\n      [readModelName]: {\n        ...state[readModelName],\n        [resolverName]: dropKey(\n          (state[readModelName] || {})[resolverName],\n          resolverArgs\n        )\n      },\n      [connectorMetaMap]: dropKey(state[connectorMetaMap], key)\n    }\n  }\n\n  let state = {\n    [connectorMetaMap]: {}\n  }\n\n  return (_, action) => {\n    const eventHandler = handlers[action.type]\n    if (eventHandler) {\n      state = eventHandler(state, action)\n    }\n\n    return state\n  }\n}\n"],"file":"create_read_models_reducer.js"}