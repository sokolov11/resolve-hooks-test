{"version":3,"sources":["../src/view_models_saga.js"],"names":["take","getHash","createConnectionManager","createSagaManager","CONNECT_VIEWMODEL","DISCONNECT_VIEWMODEL","connectViewModelSaga","disconnectViewModelSaga","viewModelsSaga","sagaArgs","connectionManager","wildcardSymbol","sagaManager","action","type","viewModelName","aggregateIds","aggregateArgs","sagaKey","start"],"mappings":";;;;;;;AAAA,SAASA,IAAT,QAAqB,oBAArB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,uBAAP,MAAoC,6BAApC;AACA,OAAOC,iBAAP,MAA8B,uBAA9B;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAwD,gBAAxD;AACA,OAAOC,oBAAP,MAAiC,2BAAjC;AACA,OAAOC,uBAAP,MAAoC,8BAApC;;AAEA,IAAMC,cAAc;AAAA;AAAA,yBAAG,SAAjBA,cAAiB,CAAUC,QAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AACfC,UAAAA,iBADe,GACKR,uBAAuB,CAAC;AAAES,YAAAA,cAAc,EAAE;AAAlB,WAAD,CAD5B;AAEfC,UAAAA,WAFe,GAEDT,iBAAiB,EAFhB;;AAAA;AAAA,eAId,IAJc;AAAA;AAAA;AAAA;;AAAA;AAKJ,iBAAMH,IAAI,CAAC,CAACI,iBAAD,EAAoBC,oBAApB,CAAD,CAAV;;AALI;AAKbQ,UAAAA,MALa;AAAA,wBAOXA,MAAM,CAACC,IAPI;AAAA,0CAQZV,iBARY,uBA4BZC,oBA5BY;AAAA;;AAAA;AASPU,UAAAA,aATO,GASwCF,MATxC,CASPE,aATO,EASQC,YATR,GASwCH,MATxC,CASQG,YATR,EASsBC,aATtB,GASwCJ,MATxC,CASsBI,aATtB;AAUTC,UAAAA,OAVS,GAUCjB,OAAO,CAAC;AACtBc,YAAAA,aAAa,EAAbA,aADsB;AAEtBC,YAAAA,YAAY,EAAZA,YAFsB;AAGtBC,YAAAA,aAAa,EAAbA;AAHsB,WAAD,CAVR;AAef,wCAAOL,WAAW,CAACO,KAAZ,MACFf,iBADE,GACkBc,OADlB,EAELZ,oBAFK,oBAIAG,QAJA;AAKHC,YAAAA,iBAAiB,EAAjBA,iBALG;AAMHE,YAAAA,WAAW,EAAXA,WANG;AAOHM,YAAAA,OAAO,EAAPA;AAPG,cASLL,MATK,CAAP;;AAfe;AAAA;;AAAA;AA6BPE,UAAAA,cA7BO,GA6BwCF,MA7BxC,CA6BPE,aA7BO,EA6BQC,aA7BR,GA6BwCH,MA7BxC,CA6BQG,YA7BR,EA6BsBC,cA7BtB,GA6BwCJ,MA7BxC,CA6BsBI,aA7BtB;AA8BTC,UAAAA,QA9BS,GA8BCjB,OAAO,CAAC;AACtBc,YAAAA,aAAa,EAAbA,cADsB;AAEtBC,YAAAA,YAAY,EAAZA,aAFsB;AAGtBC,YAAAA,aAAa,EAAbA;AAHsB,WAAD,CA9BR;AAmCf,wCAAOL,WAAW,CAACO,KAAZ,MACFd,oBADE,GACqBa,QADrB,EAELX,uBAFK,oBAIAE,QAJA;AAKHC,YAAAA,iBAAiB,EAAjBA,iBALG;AAMHE,YAAAA,WAAW,EAAXA,WANG;AAOHM,YAAAA,OAAO,EAAPA;AAPG,cASLL,MATK,CAAP;;AAnCe;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjBL,cAAiB;AAAA,CAAH,CAApB;;AAqDA,eAAeA,cAAf","sourcesContent":["import { take } from 'redux-saga/effects'\n\nimport getHash from './get_hash'\nimport createConnectionManager from './create_connection_manager'\nimport createSagaManager from './create_saga_manager'\nimport { CONNECT_VIEWMODEL, DISCONNECT_VIEWMODEL } from './action_types'\nimport connectViewModelSaga from './connect_view_model_saga'\nimport disconnectViewModelSaga from './disconnect_view_model_saga'\n\nconst viewModelsSaga = function*(sagaArgs) {\n  const connectionManager = createConnectionManager({ wildcardSymbol: null })\n  const sagaManager = createSagaManager()\n\n  while (true) {\n    const action = yield take([CONNECT_VIEWMODEL, DISCONNECT_VIEWMODEL])\n\n    switch (action.type) {\n      case CONNECT_VIEWMODEL: {\n        const { viewModelName, aggregateIds, aggregateArgs } = action\n        const sagaKey = getHash({\n          viewModelName,\n          aggregateIds,\n          aggregateArgs\n        })\n        yield* sagaManager.start(\n          `${CONNECT_VIEWMODEL}${sagaKey}`,\n          connectViewModelSaga,\n          {\n            ...sagaArgs,\n            connectionManager,\n            sagaManager,\n            sagaKey\n          },\n          action\n        )\n        break\n      }\n      case DISCONNECT_VIEWMODEL: {\n        const { viewModelName, aggregateIds, aggregateArgs } = action\n        const sagaKey = getHash({\n          viewModelName,\n          aggregateIds,\n          aggregateArgs\n        })\n        yield* sagaManager.start(\n          `${DISCONNECT_VIEWMODEL}${sagaKey}`,\n          disconnectViewModelSaga,\n          {\n            ...sagaArgs,\n            connectionManager,\n            sagaManager,\n            sagaKey\n          },\n          action\n        )\n        break\n      }\n      default:\n    }\n  }\n}\n\nexport default viewModelsSaga\n"],"file":"view_models_saga.js"}