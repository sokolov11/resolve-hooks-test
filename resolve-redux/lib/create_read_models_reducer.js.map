{"version":3,"sources":["../src/create_read_models_reducer.js"],"names":["dropKey","state","key","nextState","createReadModelsReducer","handlers","LOAD_READMODEL_STATE_REQUEST","action","readModelName","resolverName","resolverArgs","connectorMetaMap","isLoading","isFailure","LOAD_READMODEL_STATE_SUCCESS","readModelState","result","LOAD_READMODEL_STATE_FAILURE","error","DROP_READMODEL_STATE","_","eventHandler","type"],"mappings":"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","sourcesContent":["import getHash from './get_hash'\n\nimport {\n  LOAD_READMODEL_STATE_REQUEST,\n  LOAD_READMODEL_STATE_SUCCESS,\n  LOAD_READMODEL_STATE_FAILURE,\n  DROP_READMODEL_STATE\n} from './action_types'\n\nimport { connectorMetaMap } from './constants'\n\nexport const dropKey = (state, key) => {\n  const nextState = { ...state }\n  delete nextState[key]\n\n  return nextState\n}\n\nexport default function createReadModelsReducer() {\n  const handlers = {}\n\n  handlers[LOAD_READMODEL_STATE_REQUEST] = (state, action) => {\n    const readModelName = action.readModelName\n    const resolverName = getHash(action.resolverName)\n    const resolverArgs = getHash(action.resolverArgs)\n\n    return {\n      ...state,\n      [connectorMetaMap]: {\n        ...state[connectorMetaMap],\n        [`${readModelName}${resolverName}${resolverArgs}`]: {\n          isLoading: true,\n          isFailure: false\n        }\n      }\n    }\n  }\n\n  handlers[LOAD_READMODEL_STATE_SUCCESS] = (state, action) => {\n    const readModelName = action.readModelName\n    const resolverName = getHash(action.resolverName)\n    const resolverArgs = getHash(action.resolverArgs)\n    const readModelState = action.result\n\n    const key = `${readModelName}${resolverName}${resolverArgs}`\n\n    return {\n      ...state,\n      [readModelName]: {\n        ...(state[readModelName] || {}),\n        [resolverName]: {\n          ...((state[readModelName] || {})[resolverName] || {}),\n          [resolverArgs]: readModelState\n        }\n      },\n      [connectorMetaMap]: {\n        ...state[connectorMetaMap],\n        [key]: {\n          isLoading: false,\n          isFailure: false\n        }\n      }\n    }\n  }\n\n  handlers[LOAD_READMODEL_STATE_FAILURE] = (state, action) => {\n    const readModelName = action.readModelName\n    const resolverName = getHash(action.resolverName)\n    const resolverArgs = getHash(action.resolverArgs)\n    const error = action.error\n\n    const key = `${readModelName}${resolverName}${resolverArgs}`\n\n    return {\n      ...state,\n      [connectorMetaMap]: {\n        ...state[connectorMetaMap],\n        [key]: {\n          isLoading: false,\n          isFailure: true,\n          error\n        }\n      }\n    }\n  }\n\n  handlers[DROP_READMODEL_STATE] = (state, action) => {\n    const readModelName = action.readModelName\n    const resolverName = getHash(action.resolverName)\n    const resolverArgs = getHash(action.resolverArgs)\n\n    const key = `${readModelName}${resolverName}${resolverArgs}`\n\n    return {\n      ...state,\n      [readModelName]: {\n        ...state[readModelName],\n        [resolverName]: dropKey(\n          (state[readModelName] || {})[resolverName],\n          resolverArgs\n        )\n      },\n      [connectorMetaMap]: dropKey(state[connectorMetaMap], key)\n    }\n  }\n\n  let state = {\n    [connectorMetaMap]: {}\n  }\n\n  return (_, action) => {\n    const eventHandler = handlers[action.type]\n    if (eventHandler) {\n      state = eventHandler(state, action)\n    }\n\n    return state\n  }\n}\n"],"file":"create_read_models_reducer.js"}