{"version":3,"sources":["../src/get_static_based_url.js"],"names":["getStaticBasedUrl","origin","rootPath","staticPath","path","validate","string","nonEmptyString","leadingSlash"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD,EAASC,QAAT,EAAmBC,UAAnB,EAA+BC,IAA/B,EAAwC;AAChEC,EAAAA,QAAQ,CAACC,MAAT,CAAgBF,IAAhB,EAAsB,MAAtB;AACAC,EAAAA,QAAQ,CAACE,cAAT,CAAwBJ,UAAxB,EAAoC,aAApC;;AAEA,MAAI,0BAAcC,IAAd,CAAJ,EAAyB;AACvB,WAAOA,IAAP;AACD;;AAEDC,EAAAA,QAAQ,CAACG,YAAT,CAAsBJ,IAAtB,EAA4B,MAA5B;;AAEA,MAAI,0BAAcD,UAAd,CAAJ,EAA+B;AAC7B,gBAAUA,UAAV,GAAuBC,IAAvB;AACD;;AAED,SAAO,oCAAgBH,MAAhB,EAAwBC,QAAxB,QAAsCC,UAAtC,GAAmDC,IAAnD,CAAP;AACD,CAfD;;eAiBeJ,iB","sourcesContent":["import getRootBasedUrl from './get_root_based_url'\nimport * as validate from './validate'\nimport { isAbsoluteUrl } from './utils'\n\nconst getStaticBasedUrl = (origin, rootPath, staticPath, path) => {\n  validate.string(path, 'Path')\n  validate.nonEmptyString(staticPath, 'Static path')\n\n  if (isAbsoluteUrl(path)) {\n    return path\n  }\n\n  validate.leadingSlash(path, 'Path')\n\n  if (isAbsoluteUrl(staticPath)) {\n    return `${staticPath}${path}`\n  }\n\n  return getRootBasedUrl(origin, rootPath, `/${staticPath}${path}`)\n}\n\nexport default getStaticBasedUrl\n"],"file":"get_static_based_url.js"}