{"version":3,"sources":["../src/connect_read_model.js"],"names":["connectReadModel","mapStateToOptions","Component","ReadModelContainer","componentDidMount","props","connectorOptions","readModelName","resolverName","resolverArgs","componentWillUnmount","disconnectReadModel","componentDidUpdate","prevProps","prevConnectorOptions","render","ownProps","isLoading","data","React","PureComponent","mapStateToConnectorProps","state","connectorMeta","readModels","connectorMetaMap","isFailure","error","mapDispatchToConnectorProps","dispatch","actions","ReadModelConnector"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport hoistNonReactStatic from 'hoist-non-react-statics'\n\nimport * as actions from './actions'\nimport { connectorMetaMap } from './constants'\nimport getHash from './get_hash'\nimport connectResolveAdvanced from './connect_resolve_advanced'\n\nconst connectReadModel = mapStateToOptions => Component => {\n  class ReadModelContainer extends React.PureComponent {\n    componentDidMount() {\n      const {\n        readModelName,\n        resolverName,\n        resolverArgs\n        // placeholder,\n        // placeholderTimeout\n      } = this.props.connectorOptions\n\n      this.props.connectReadModel(readModelName, resolverName, resolverArgs)\n    }\n\n    componentWillUnmount() {\n      const {\n        readModelName,\n        resolverName,\n        resolverArgs\n        // placeholder,\n        // placeholderTimeout\n      } = this.props.connectorOptions\n\n      this.props.disconnectReadModel(readModelName, resolverName, resolverArgs)\n    }\n\n    componentDidUpdate(prevProps) {\n      const connectorOptions = this.props.connectorOptions\n      const prevConnectorOptions = prevProps.connectorOptions\n      if (\n        connectorOptions &&\n        prevConnectorOptions &&\n        (prevConnectorOptions.readModelName !==\n          connectorOptions.readModelName ||\n          prevConnectorOptions.resolverName !== connectorOptions.resolverName ||\n          prevConnectorOptions.resolverArgs !==\n            connectorOptions.resolverArgs) &&\n        (prevConnectorOptions.readModelName !==\n          connectorOptions.readModelName ||\n          prevConnectorOptions.resolverName !== connectorOptions.resolverName ||\n          getHash(prevConnectorOptions.resolverArgs) !==\n            getHash(connectorOptions.resolverArgs))\n      ) {\n        this.props.disconnectReadModel(\n          prevConnectorOptions.readModelName,\n          prevConnectorOptions.resolverName,\n          prevConnectorOptions.resolverArgs\n        )\n        this.props.connectReadModel(\n          connectorOptions.readModelName,\n          connectorOptions.resolverName,\n          connectorOptions.resolverArgs\n        )\n      }\n    }\n\n    render() {\n      const { ownProps, isLoading, data } = this.props\n      return <Component {...ownProps} isLoading={isLoading} data={data} />\n    }\n  }\n\n  const mapStateToConnectorProps = (state, ownProps) => {\n    const connectorOptions = mapStateToOptions(state, ownProps)\n\n    const readModelName = connectorOptions.readModelName\n    const resolverName = getHash(connectorOptions.resolverName)\n    const resolverArgs = getHash(connectorOptions.resolverArgs)\n\n    const connectorMeta =\n      state.readModels &&\n      state.readModels[connectorMetaMap] &&\n      state.readModels[connectorMetaMap][\n        `${readModelName}${resolverName}${resolverArgs}`\n      ]\n        ? state.readModels[connectorMetaMap][\n            `${readModelName}${resolverName}${resolverArgs}`\n          ]\n        : {}\n\n    const { isLoading, isFailure } = connectorMeta\n\n    const data =\n      isLoading === false && isFailure === false\n        ? state.readModels[readModelName][resolverName][resolverArgs]\n        : null\n\n    const error =\n      isLoading === false && isFailure === true ? connectorMeta.error : null\n\n    return {\n      ownProps,\n      connectorOptions,\n      isLoading,\n      isFailure,\n      data,\n      error\n    }\n  }\n\n  const mapDispatchToConnectorProps = dispatch =>\n    bindActionCreators(\n      {\n        connectReadModel: actions.connectReadModel,\n        disconnectReadModel: actions.disconnectReadModel\n      },\n      dispatch\n    )\n\n  const ReadModelConnector = connect(\n    mapStateToConnectorProps,\n    mapDispatchToConnectorProps\n  )(ReadModelContainer)\n\n  ReadModelConnector.mapStateToOptions = mapStateToOptions\n\n  hoistNonReactStatic(ReadModelConnector, ReadModelContainer)\n\n  return connectResolveAdvanced(ReadModelConnector)\n}\n\nexport default connectReadModel\n"],"file":"connect_read_model.js"}