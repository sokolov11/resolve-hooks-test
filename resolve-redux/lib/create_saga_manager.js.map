{"version":3,"sources":["../src/create_saga_manager.js"],"names":["createSagaManager","sagas","start","key","saga","Array","isArray","sagaArgs","fork","sagaId","push","stop","callback"],"mappings":";;;;;;;;;AAAA;;AAEA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,MAAMC,KAAK,GAAG,EAAd;AAEA,SAAO;AACJC,IAAAA,KADI;AAAA;AAAA,gDACEC,GADF,EACOC,IADP;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEH,kBAAI,CAACC,KAAK,CAACC,OAAN,CAAcL,KAAK,CAACE,GAAD,CAAnB,CAAL,EAAgC;AAC9BF,gBAAAA,KAAK,CAACE,GAAD,CAAL,GAAa,EAAb;AACD;;AAJE,wCACgBI,QADhB;AACgBA,gBAAAA,QADhB;AAAA;;AAAA;AAKY,qBAAMC,6BAAKJ,IAAL,SAAcG,QAAd,EAAN;;AALZ;AAKGE,cAAAA,MALH;AAOHR,cAAAA,KAAK,CAACE,GAAD,CAAL,CAAWO,IAAX,CAAgBD,MAAhB;AAPG,+CASIA,MATJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYJE,IAAAA,IAZI;AAAA;AAAA,+CAYCR,GAZD,EAYMS,QAZN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBAaCP,KAAK,CAACC,OAAN,CAAcL,KAAK,CAACE,GAAD,CAAnB,CAbD;AAAA;AAAA;AAAA;;AAAA,0BAcoBF,KAAK,CAACE,GAAD,CAdzB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAcUM,cAAAA,MAdV;AAAA;AAeC,qBAAM,qBAAOA,MAAP,CAAN;;AAfD;AAAA;AAAA;;AAAA;AAmBH,qBAAOR,KAAK,CAACE,GAAD,CAAZ;;AACA,kBAAI,OAAOS,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,gBAAAA,QAAQ;AACT;;AAtBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAyBD,CA5BD;;eA8BeZ,iB","sourcesContent":["import { fork, cancel } from 'redux-saga/effects'\n\nconst createSagaManager = () => {\n  const sagas = {}\n\n  return {\n    *start(key, saga, ...sagaArgs) {\n      if (!Array.isArray(sagas[key])) {\n        sagas[key] = []\n      }\n      const sagaId = yield fork(saga, ...sagaArgs)\n\n      sagas[key].push(sagaId)\n\n      return sagaId\n    },\n\n    *stop(key, callback) {\n      if (Array.isArray(sagas[key])) {\n        for (const sagaId of sagas[key]) {\n          yield cancel(sagaId)\n        }\n      }\n\n      delete sagas[key]\n      if (typeof callback === 'function') {\n        callback()\n      }\n    }\n  }\n}\n\nexport default createSagaManager\n"],"file":"create_saga_manager.js"}